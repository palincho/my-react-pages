{"version":3,"sources":["css/MainNav.module.css","css/Layout.module.css","components/layout/MainNav.js","components/layout/Layout.js","pages/About.js","logo.svg","pages/Home.js","components/todos/TodoItem.js","components/todos/TodoList.js","components/todos/TodoForm.js","pages/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MainNav","className","classes","header","logo","id","to","Layout","props","main","children","About","Home","src","alt","href","target","rel","TodoItem","style","color","Modal","Dialog","Header","closeButton","Title","title","Body","description","Footer","Button","variant","TodoList","listStyle","margin","padding","todos","map","todo","TodoForm","titleInputRef","useRef","descInputRef","Form","onSubmit","event","preventDefault","todoData","current","value","Math","random","toString","console","log","onAddTodo","Group","controlId","Label","Control","type","placeholder","ref","Todo","useState","setTodos","prevTodos","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,wBAAwB,MAAQ,yB,mBCAzHD,EAAOC,QAAU,CAAC,KAAO,uB,sJCuBVC,MArBf,WACE,OACE,yBAAQC,UAAWC,IAAQC,OAA3B,UACE,qBAAKF,UAAWC,IAAQE,KAAxB,uBACA,8BACE,qBAAIC,GAAG,aAAP,UACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,8B,iBCJGC,MATf,SAAgBC,GACd,OACE,gCACE,cAAC,EAAD,IACA,sBAAMP,UAAWC,IAAQO,KAAzB,SAAgCD,EAAME,eCO7BC,EAXD,WACZ,OACE,oCACE,uCACA,+BACE,iFCRO,MAA0B,iCCqB1BC,EAlBF,WACX,OACE,yBAASX,UAAU,MAAnB,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKY,IAAKT,EAAMH,UAAU,WAAWa,IAAI,SACzC,mBACEb,UAAU,WACVc,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+B,gCCoBOC,MAzBf,SAAkBV,GAIhB,OACE,qBAAKW,MAJU,CACfC,MAAO,SAGP,SACE,eAACC,EAAA,EAAMC,OAAP,WACE,cAACD,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,UAAcjB,EAAMkB,UAGtB,cAACL,EAAA,EAAMM,KAAP,UACE,4BAAInB,EAAMoB,gBAGZ,eAACP,EAAA,EAAMQ,OAAP,WAEE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAhB,sBACA,cAACD,EAAA,EAAD,CAAQC,QAAQ,UAAhB,2BCCKC,MApBf,SAAkBxB,GAOhB,OACE,oBAAIW,MAPY,CAChBc,UAAW,OACXC,OAAQ,EACRC,QAAS,GAIT,SACG3B,EAAM4B,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEZ,MAAOY,EAAKZ,MACZE,YAAaU,EAAKV,aAFbU,EAAKjC,U,QCqCLkC,MA9Cf,SAAkB/B,GAChB,IAAMgC,EAAgBC,mBAChBC,EAAeD,mBAkBrB,OACE,eAACE,EAAA,EAAD,CAAMC,SAjBR,SAAuBC,GACrBA,EAAMC,iBAEN,IAGMC,EAAW,CACfrB,MAJmBc,EAAcQ,QAAQC,MAKzCrB,YAJkBc,EAAaM,QAAQC,MAKvC5C,GAAI6C,KAAKC,SAASC,YAGpBC,QAAQC,IAAIP,GACZvC,EAAM+C,UAAUR,IAIhB,UACE,eAACJ,EAAA,EAAKa,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACd,EAAA,EAAKe,MAAN,oBACA,cAACf,EAAA,EAAKgB,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZC,IAAKtB,OAIT,eAACG,EAAA,EAAKa,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACd,EAAA,EAAKe,MAAN,0BACA,cAACf,EAAA,EAAKgB,QAAN,CACEC,KAAK,OACLC,YAAY,sBACZC,IAAKpB,OAGT,cAACZ,EAAA,EAAD,CAAQC,QAAQ,UAAU6B,KAAK,SAA/B,qBClBSG,EApBF,WACX,MAA0BC,mBAAS,IAAnC,mBAAO5B,EAAP,KAAc6B,EAAd,KAQA,OACE,oCACE,sCACA,iCACE,cAAC,EAAD,CAAUV,UAVO,SAAAjB,GACrB2B,GAAS,SAAAC,GACP,MAAM,CAAE5B,GAAR,mBAAiB4B,UASf,cAAC,EAAD,CAAU9B,MAAOA,W,MCOV+B,MAlBf,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,YCPKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,kBAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.7928856e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNav_header__1hheS\",\"logo\":\"MainNav_logo__1thas\",\"active\":\"MainNav_active__3oaaJ\",\"badge\":\"MainNav_badge__WPUeM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3Q7e2\"};","import { Link } from 'react-router-dom';\nimport classes from '../../css/MainNav.module.css';\n\nfunction MainNav() {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>React App</div>\n      <nav>\n        <ul id=\"navigation\">\n          <li>\n            <Link to='/'>Home</Link>\n          </li>\n          <li>\n            <Link to='/todo'>Todo</Link>\n          </li>\n          <li>\n            <Link to='/about'>About</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default MainNav;","import MainNav from './MainNav';\nimport classes from '../../css/Layout.module.css';\n\nfunction Layout(props) {\n  return (\n    <div>\n      <MainNav />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;","import \"../App.css\";\n\n\nconst About = () => {\n  return (\n    <section>\n      <h2>About</h2>\n      <main>\n        <p>This section contains information about...</p>\n      </main>\n    </section>\n  );\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"../App.css\";\nimport logo from \"../logo.svg\";\n\nconst Home = () => {\n  return (\n    <section className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </section>\n  );\n};\n\nexport default Home;\n","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction TodoItem(props) {\n  const divStyle = {\n    color: \"black\",\n  };\n  return (\n    <div style={divStyle}>\n      <Modal.Dialog>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.title}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>{props.description}</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          {/* if done -> button style change */}\n          <Button variant=\"secondary\">Favorite</Button>\n          <Button variant=\"primary\">Done</Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","import TodoItem from \"./TodoItem\";\n\nfunction TodoList(props) {\n  const listStyle = {\n    listStyle: \"none\",\n    margin: 0,\n    padding: 0\n  };\n\n  return (\n    <ul style={listStyle}>\n      {props.todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          title={todo.title}\n          description={todo.description}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import { useRef } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction TodoForm(props) {\n  const titleInputRef = useRef();\n  const descInputRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredTitle = titleInputRef.current.value;\n    const enteredDesc = descInputRef.current.value;\n\n    const todoData = {\n      title: enteredTitle,\n      description: enteredDesc,\n      id: Math.random().toString()\n    };\n\n    console.log(todoData);\n    props.onAddTodo(todoData);\n  }\n\n  return (\n    <Form onSubmit={submitHandler}>\n      <Form.Group controlId=\"formTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter Todo title\"\n          ref={titleInputRef}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formDescription\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter a description\"\n          ref={descInputRef}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Add\n      </Button>\n    </Form>\n  );\n}\n\nexport default TodoForm;\n","import \"../App.css\";\nimport { useState } from \"react\";\nimport TodoList from \"../components/todos/TodoList\";\nimport TodoForm from \"../components/todos/TodoForm\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([]);\n\n  const addTodoHandler = todo => {\n    setTodos(prevTodos => {\n      return [todo, ...prevTodos];\n    });\n  }\n\n  return (\n    <section>\n      <h1>Todo</h1>\n      <main>\n        <TodoForm onAddTodo={addTodoHandler} />\n        <TodoList todos={todos} />\n      </main>\n    </section>\n  );\n};\n\nexport default Todo;\n","import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport Todo from \"./pages/Todo\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/Todo\">\n          <Todo />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}